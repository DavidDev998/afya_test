name: Preview Deployment

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

jobs:
  preview-deploy:
    name: Preview Deploy
    runs-on: ubuntu-latest

    environment:
      name: preview
      url: ${{ steps.vercel-deploy.outputs.preview-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quick tests
        run: npm run test:ci

      - name: Build application
        run: npm run build

      - name: Deploy Preview to Vercel
        id: vercel-deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./

      - name: Update PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Preview deployment')
            );

            const body = `## 🔍 Preview Deployment

            ✅ Preview deployed successfully!

            **🔗 Preview URL:** ${{ steps.vercel-deploy.outputs.preview-url }}

            ---

            ### 📊 Build Summary
            - **Node.js Version:** 20.x
            - **Build Time:** ~2-3 minutes
            - **Tests:** ✅ Passed
            - **Deployment:** ✅ Success

            > This preview will be automatically updated when you push new commits to this PR.`;

            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  visual-regression:
    name: Visual Regression Testing
    runs-on: ubuntu-latest
    needs: preview-deploy
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment to be ready
        run: sleep 60

      - name: Run Percy visual tests
        uses: percy/exec-action@v0.3.1
        with:
          custom-command: 'npx percy snapshot ${{ needs.preview-deploy.outputs.preview-url }}'
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
